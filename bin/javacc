#!/usr/bin/env ruby
#
# Collects the complexity metrics for a single Java source file
#
# Usage: $0 filepath
#

require 'json'

BIN = File.dirname($0)

def complexity_report(path)
  imports = IO.readlines(path).select {|l| /^\s*import\s/ === l }.length + 1
  raw = `#{BIN}/javancss -function #{path}`
  comps = raw.split("\n").select {|l| /\(/ === l }.map do |line|
    line.split[2].to_i
  end
  sumcc = comps.inject(:+)
  maxcc = comps.max
  meancc = sumcc.to_f / comps.length
  {
    filename: path,
    complexity: {
      esumcc: imports * sumcc,
      emaxcc: imports * maxcc,
      emeancc: imports * meancc
    }
  }
end

if ARGV.length != 1
  $stderr.puts "Usage: #{File.basename($0)} filepath"
  exit 1
end

puts complexity_report(ARGV[0]).to_json
exit 0
