#!/usr/bin/env ruby
#
# Collects the complexity metrics for a single ruby source file
#
# Usage: $0 filepath
#

require 'json'
require 'ruby_parser'

require_relative '../lib/ruby/ruby_source_file'

#- - - Helpers - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

def complexity_report(path)
  source_code = IO.readlines(path).join
  report = RubySourceFile.new(path, source_code).complexity
  function_complexities = report[:functions].map {|f| f[:complexity] }
  sumcc = function_complexities.inject(:+)
  maxcc = function_complexities.max || 0
  meancc = function_complexities.length > 0 ? sumcc.to_f / function_complexities.length : 0
  efferent_multiplier = report[:num_dependencies] + 1
  report[:complexity] = {
    esumcc: sumcc * efferent_multiplier,
    emaxcc: maxcc * efferent_multiplier,
    emeancc: meancc * efferent_multiplier
  }
  report
end

if ARGV.length != 1
  $stderr.puts "Usage: #{File.basename($0)} filepath"
  exit 1
end

puts JSON.pretty_generate complexity_report(ARGV[0])
exit 0
